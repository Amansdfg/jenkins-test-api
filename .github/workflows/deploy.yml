name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "target/*.jar"
          target: ${{ secrets.TARGET_DIR }}
      - name: SSH and Run App
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |          
            TARGET_DIRECTORY="***/target"  # Replace with the actual directory path
            JAR_FILE="$TARGET_DIRECTORY/$(ls $TARGET_DIRECTORY/*.jar | head -n 1)"
  
            echo "üîç Verifying if the target directory exists..."
            if [ -d "$TARGET_DIRECTORY" ]; then
            echo "‚úÖ Directory exists."
            else
            echo "‚ùå Directory does not exist!"
            exit 1
            fi
  
            echo "üì¶ Listing JAR files..."
            ls -la "$TARGET_DIRECTORY"
  
            # Check if JAR file exists
            if [ -z "$JAR_FILE" ]; then
            echo "‚ùå No JAR file found in the target directory!"
            exit 1
            else
            echo "‚úÖ Found JAR file: $JAR_FILE"
            fi
  
            # Verify if the directory has write permissions
            echo "üîç Verifying write permissions for target directory..."
            if ! [ -w "$TARGET_DIRECTORY" ]; then
            echo "‚ùå No write permission to the target directory!"
            exit 1
            fi
  
            # Check Java version and environment
            echo "üîç Verifying Java version..."
            java -version
            if [ $? -ne 0 ]; then
            echo "‚ùå Java is not installed or not properly configured!"
            exit 1
            fi
  
            # Kill any existing Java processes running the JAR file
            echo "üõë Killing existing Java processes..."
            PID=$(pgrep -f "java -jar $JAR_FILE")
            if [ -n "$PID" ]; then
            echo "‚úÖ Killing Java process with PID: $PID"
            kill -9 "$PID" || true
            else
            echo "‚ùå No Java process found."
            fi
  
            # Run the JAR file in the background using nohup
            echo "üöÄ Starting application in background..."
            nohup java -jar "$JAR_FILE" > "$TARGET_DIRECTORY/output.log" 2>&1 &
  
            # Check if the application started successfully
            if [ $? -eq 0 ]; then
            echo "‚úÖ App launched successfully."
            else
            echo "‚ùå Failed to launch app."
            exit 1
            fi
  
            # Give feedback on whether the process is running
            echo "üîç Verifying if the application is running..."
            ps aux | grep "java -jar $JAR_FILE" | grep -v grep
  
            if [ $? -eq 0 ]; then
            echo "‚úÖ Application is running."
            else
            echo "‚ùå Application failed to start."
            exit 1
            fi
  
            echo "üìù Application logs can be found at: $TARGET_DIRECTORY/output.log"
