pipeline:
  name: sdxfcgvhjb
  identifier: sdxfcgvhjb
  projectIdentifier: saddsa
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: github_connector
        repoName: jenkins-test-api
        build: <+input>
  stages:
    - stage:
        name: ci
        identifier: fcvgbh
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: false
            paths: []
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  name: Build with Maven
                  identifier: MavenBuild
                  type: Run
                  spec:
                    image: maven:3.9.3-eclipse-temurin-17
                    shell: Sh
                    command: |
                      mvn clean package -DskipTests
              - step:
                  name: Build and Push Docker Image
                  identifier: DockerBuildPush
                  type: BuildAndPushDockerRegistry
                  spec:
                    connectorRef: dockerhubkz
                    repo: 230103375/spring-test
                    tags:
                      - latest
                    dockerfile: Dockerfile
                    context: .
          buildIntelligence:
            enabled: false
    - stage:
        name: cd
        identifier: cd
        description: ""
        type: Deployment
        spec:
          deploymentType: Ssh
          service:
            serviceRef: ec2_service
            serviceInputs:
              serviceDefinition:
                type: Ssh
                spec:
                  artifacts:
                    primary:
                      sources:
                        - identifier: sasdasdasd
                          type: DockerRegistry
                          spec:
                            tag: <+input>
          environment:
            environmentRef: ec2_infra
            gitBranch: master
            deployToAll: false
            infrastructureDefinitions:
              - identifier: ec2_infra
          execution:
            steps:
              - step:
                  type: HarnessApproval
                  name: Approve before deploy
                  identifier: approval_step
                  timeout: 1d
                  spec:
                    approvalMessage: Please approve the deployment
                    includePipelineExecutionHistory: true
                    isAutoRejectEnabled: false
                    approvers:
                      userGroups:
                        - account._account_all_users
                      minimumCount: 1
                      disallowPipelineExecutor: false
                    approverInputs: []
              - step:
                  type: Command
                  name: Deploy Docker Container
                  identifier: deploy_docker
                  timeout: 10m
                  spec:
                    shell: Bash
                    onDelegate: true
                    commandUnits:
                      - name: run_deploy
                        identifier: run_deploy
                        type: Script
                        workingDirectory: /home/ec2-user
                        command: |
                          echo "Pulling Docker image..."
                          docker pull 230103375/spring-test:latest

                          echo "Stopping old container..."
                          docker stop spring-test || true
                          docker rm spring-test || true

                          echo "Starting new container..."
                          docker run -d --name spring-test -p 80:80 230103375/spring-test:latest
            rollbackSteps: []
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
